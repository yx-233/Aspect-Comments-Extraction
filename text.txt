按照下面的描述用python语言实现其中的功能：方面级语句抽取是指从评论中抽取涉及方面级内容的文本区块。与已有的公开数据集用户评论不同，博物馆评论存在较多隐式情感表达，用户对目标实体的评价多包含在相邻上下文中。例如“馆内有触摸屏，可以在上面玩一些与展品相关的小游戏，体验一下也是乐趣颇多”，其中与数字化服务相关的方面词是“触摸屏”，传统方法只抽取含有关键词的短句，即“馆内有一些触摸屏”，忽略了其上下文信息，进而导致后续情感分析时得到用户评价中立的结果。然而实际上，用户关于“触摸屏”的体验是“乐趣颇多”，情感表现为积极正面。基于此，本文提出了一种基于滑动窗口的方面级语句抽取算法，具体过程如下所示。其中，D = {d1,…,dm} 为评论语料集合，T是已构建的方面词词库，Wl为向左搜索最大窗口，Wr 为向右搜索最大窗口，P 为短句切割标点符号，P˜  表示方面级上下文切割标点符号，thres 表示去重阈值。
输入：D = {d1 ,…,dm}, Wl , Wr , P,P˜ ,T,thres。
Step1：抽取候选方面级语句集合。
①遍历评论语料集合D 中每一条评论di，将评论di 按标点符号集P 进行短句切分, 找到所有包含方面词的中心句sj, 将索引值j 存入列表Idx。
②遍历索引列表Idx，将评论di 切分为左搜索区间SL 和右搜索区间 SR。首先从右向左遍历 SL 中的短句，1 ≤ k ≤ Wl   + 1，若sj  -  k 末尾字符为标点集P 中的标点符号，则停止遍历并取出{sj - k + 1,…,sj}。然后从左向右遍历 SR 中的短句，1 ≤ l ≤ Wr
，若 sj + l 末尾字符为标点集 P˜中的标点符号，则停
止遍历并取出{sj + 1,…,sj + l}
③{sj - k + 1,…,sj + l} 即为抽取的方面级语句，将其存入候
选语句列表S'。
④结束索引列表Idx的遍历，结束评论语料D的遍历。
⑤得到候选语句列表S'。
Step2：删除重复语句，获取方面级语句列表。
⑥遍历候选语句列表 S'，依次任取列表中的两条语句
si,sj
，使用 TF（Term Frequency）方法将句子转化为由词频表
示的向量。
⑦计算两条语句的余弦相似度 Simij
，若 Simij 大于阈值
thres，则从S'中删除si,sj中较短的句子s。
⑧结束候选语句列表S'的遍历。
输出：经过去重后的方面级语句列表S'。

这段代码的目的是从一个Excel文件中读取评论数据，然后根据一些规则和词库，抽取出包含方面词的语句，并去除重复的语句，最后将结果保存到另一个Excel文件中。具体来说，这段代码可以分为以下几个步骤：

- 首先，使用`pd.read_excel()`函数从指定的路径读取Excel文件，并将其存储为一个名为`data`的数据框对象¹。
- 然后，使用`data['comments'].apply(str).tolist()`将数据框中的`comments`列转换为字符串类型，并将其转换为一个列表，存储为`D`变量。这个列表包含了所有的评论语料¹。
- 接下来，定义了一些参数和变量，如向左和向右搜索的最大窗口（`Wl`和`Wr`），短句切割和方面级上下文切割的标点符号（`P`和`P_tilde`），方面词词库（`T`），去重阈值（`thres`）等。这些参数和变量用于后续的语句抽取和去重过程¹。
- 然后，定义了一个空列表`S_prime`，用于存储候选方面级语句¹。
- 接下来，开始第一步：抽取候选方面级语句集合。这个过程分为以下几个子步骤：
  - 对于每一条评论语料`di`，使用一个循环遍历其每个字符，如果字符是短句切割标点符号（如句号、感叹号、问号、逗号等），就将其前面的部分切分出来作为一个短句，并加入到一个名为`s_list`的列表中。这样就可以将一条评论分割成多个短句¹。
  - 对于每个短句，使用一个循环遍历方面词词库中的每个方面词（如“服务”），如果方面词出现在短句中，就将该短句在`s_list`中的索引值存入到一个名为`Idx`的列表中，并跳出内层循环。这样就可以找出包含方面词的短句在`s_list`中的位置¹。
  - 对于每个索引值`j`，将评论语料切分为左搜索区间（即索引值之前的部分）和右搜索区间（即索引值之后的部分），并分别存储为`SL`和`SR`两个列表¹。
  - 使用两个变量`k`和`l`分别表示向左和向右搜索的步长，并初始化为1和0¹。
  - 使用一个循环向左搜索，如果遇到短句末尾是标点符号（如句号、感叹号、问号等），就停止搜索并跳出循环；否则增加向左搜索步长¹。
  - 使用一个循环向右搜索，如果遇到短句末尾是标点符号（如逗号、分号、顿号等），就停止搜索并跳出循环；否则增加向右搜索步长¹。
  - 将左搜索区间的最后`k-1`个短句，加上当前包含方面词的短句，加上右搜索区间的前`l+1`个短句，拼接起来作为一个方面级语句，并存入到候选语句列表`S_prime`中¹。
- 接下来，开始第二步：删除重复语句，获取方面级语句列表。这个过程分为以下几个子步骤：
  - 使用`CountVectorizer()`函数初始化一个词频向量化器，用于将文本转换为词频矩阵²。
  - 使用`fit_transform()`方法将候选语句列表`S_prime`转化为一个词频矩阵，并使用`toarray()`方法将其转化为一个数组，存储为`X`变量²。
  - 对于每一条候选语句`si`，使用一个循环遍历其后面的每一条候选语句`sj`，并使用`cosine_similarity()`函数计算两条语句的余弦相似度²。
  - 如果余弦相似度大于阈值（默认为0.8），就比较两条语句的长度，如果`si`比`sj`长，就从候选语句列表中删除`sj`；否则从候选语句列表中删除`si`¹。
- 最后，输出经过去重后的方面级语句列表。这个过程分为以下几个子步骤：
  - 使用一个列表推导式去除候选语句列表中的空字符串¹。
  - 使用`pd.DataFrame()`函数将方面级语句列表转换为一个数据框对象，并命名为`df`¹。
  - 使用`to_excel()`方法将数据框对象保存到指定的路径下，并命名为“方面级评论.xlsx”¹。

p的作用是将评论拆分为短句,p_title是用来划分不同的方面级评价，例如“这家图书馆外观不错，现代大气；但是工作人员的服务态度太差了，无语。”
这句话按照p可以划分为["这家图书馆外观不错","现代大气","但是工作人员的服务态度太差了","无语"]
按照p_title可以划分为"这家图书馆外观不错，现代大气"和"但是工作人员的服务态度太差了，无语。"这两个方面级短语

窗口大小限制：由于在线评论属于非结构数据，具有很强的随意性，评论者使用标点符号时也比较随机，例如整段评论中只使用了逗号，这个时候限制搜索的窗口大小可以

避免方面级评论过长，包含太多非该方面级的评论。